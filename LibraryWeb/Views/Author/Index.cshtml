@model Library.Domain.Dto.Author.AuthorDto;
@{
    ViewData["Title"] = "Authors";
}
<div class="row">
    <div class="col-md-6">
        <h1>Listado de Autores</h1>
    </div>

    <div class="col-md-6">
        <button class="btn btn-primary float-end" onclick="modalNewAuthor()">
            <i class="fas fa-plus-square"></i>
            Nuevo Autor
        </button>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-12">
        <table id="authorTable" class="table" style="width:100% !important">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Last Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="bodyAuthor">
            </tbody>
        </table>
    </div>

</div>


@*Modal Atuhor*@
<div class="modal fade" id="modalAuthor" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="1" role="dialog" aria-labelledby="modalProductLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idTitleAuthor">Nuevo Autor</h5>
            </div>
            <div class="modal-body">
                <form id="formAuthor">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="Name"></label>
                            <input asp-for="Name"
                                   placeholder="Nombre Autor"
                                   class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="LastName"></label>
                            <input asp-for="LastName"
                                   placeholder="Apellido"
                                   class="form-control" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="clearForm()">
                    <i class="fas fa-window-close"></i>
                    Cancelar
                </button>
                <button type="submit" class="btn btn-success" id="btnSave">
                    <i class="far fa-save"></i>
                    Guardar
                </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript" charset="utf-8">

        var listAuthor = [];
        let idAuthor = "";
        $(document).ready(function () {
            $("#btnSave").click(function () {
                $("formAuthor").submit(function (e) {
                    e.preventDefault();
                });

                saveAutor();
            });

            GetAllAuthor();
        });

        //Get All
        function GetAllAuthor() {
            modalProcessing(true, 'Cargando Autores');
            $.ajax({
                url: '@Url.Action("GetAll", "Author")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        listAuthor = data.result;
                        loadGrid(listAuthor);
                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }

        function loadGrid(data) {
            //llenar registro
            if ($.fn.dataTable.isDataTable('#authorTable')) {
                var table = $('#authorTable').DataTable();
                table.destroy();
                loadGridAuthor(data);
                fillDataTable('authorTable');
            }
            else {
                loadGridAuthor(data);
                fillDataTable('authorTable');
            }
        }

        function loadGridAuthor(data) {
            $("#bodyAuthor").html("");

            for (var i = 0; i < data.length; i++) {
                var tr = `
                                            <tr>
                                                <th>`+ data[i].name + `</th>
                                                <th>`+ data[i].lastName + `</th>
                                            <td>
                                                <button  class="btn btn-warning" onclick="modalEditAuthor(`+ data[i].id + `)"><i class="fas fa-pen-nib iconSpace"></i> Editar</button>
                                                <button class="btn btn-danger" onclick="deleteAuthor(`+ data[i].id + `)"><i class="fas fa-trash-alt iconSpace"></i> Eliminar</button>
                                            </td>
                                            </tr>
                                        `;
                $("#bodyAuthor").append(tr);
            }
        }

        //Modal
        function modalNewAuthor() {
            clearForm();

            $('#idTitleAuthor').html('Nuevo Autor');
            const modal = new bootstrap.Modal('#modalAuthor', {
                keyboard: true
            });
            modal.show();
        }

        function modalEditAuthor(id) {
            clearForm();
            idAuthor = id;
            let author = listAuthor.find(x => x.id == idAuthor);
            console.log(author);
            $("#Name").val(author.name);
            $("#LastName").val(author.lastName);

            $('#idTitleAuthor').html('Editar Autor');
            const modal = new bootstrap.Modal('#modalAuthor', {
                keyboard: true
            });
            modal.show();
        }

        function clearForm() {
            $("#Name").val("");
            $("#LastName").val("");
            idAuthor = '';
        }
       
        //Save Autor
        function saveAutor() {
            if (!$("#formAuthor").valid()) {
                console.log("no es válido");
                return;
            }

            let params = {
                name: $("#Name").val(),
                lastName: $("#LastName").val(),
            };

            if (idAuthor == '')
                insertAuthor(params);
            else {
                params.id = idAuthor;
                updateAuthor(params);
            }
            console.log(params);

        }

        function insertAuthor(author) {
            modalProcessing(true);
            $.ajax({
                url: '@Url.Action("Create", "Author")',
                method: 'POST',
                data: author,
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        $('#modalAuthor').modal('toggle');
                        GetAllAuthor();
                        toastMessage('success', data.message);

                    } else {
                        toastMessage('error', data.message);
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }

        function updateAuthor(author) {
            modalProcessing(true);
            $.ajax({
                url: '@Url.Action("Update", "Author")',
                method: 'PUT',
                data: author,
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        $('#modalAuthor').modal('toggle');
                        GetAllAuthor();
                        toastMessage('success', data.message);

                    } else {
                        toastMessage('error', data.message);
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }

        function deleteAuthor(idAuthor) {
            Swal.fire({
                title: '¿Confirmar Eliminacion?',
                text: "No podrás revertir esto.!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Si, Eliminar!',
            }).then((result) => {
                if (result.isConfirmed) {
                    modalProcessing(true, 'Eliminando Autor');
                    $.ajax({
                        url: '@Url.Action("Delete", "Author")',
                        method: 'DELETE',
                        data: {
                            id: idAuthor,
                        },
                        dataType: "json",
                        success: function (data) {
                            modalProcessing(false);
                            if (data.isSuccess) {
                                toastMessage('success', data.message);
                                listAuthor = listAuthor.filter(x => x.id != idAuthor);
                                loadGrid(listAuthor);
                            } else {
                                toastMessage('error', data.message);
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            modalProcessing(false);
                            console.error(xhr, textStatus, errorThrown);
                            swaMessage(xhr.status, xhr.responseJSON.message);
                        }
                    });
                }

            });

        }

    </script>
}